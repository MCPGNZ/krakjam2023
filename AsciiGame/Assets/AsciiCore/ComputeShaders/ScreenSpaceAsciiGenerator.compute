// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel ScreenSpaceAsciiGenerator

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> _ResultTexture;

Texture2D<float4> _ScreenSpaceTexutre;

float calculateLuminance(float3 color)
{
    return 0.299f * color.r + 0.587f * color.g + 0.114f * color.b;
}

[numthreads(1, 1, 1)]
void ScreenSpaceAsciiGenerator(uint3 id : SV_DispatchThreadID)
{
    if (id.x % 2 == 0 && id.y % 2 == 0)
    {
        float leftBottom = calculateLuminance(_ScreenSpaceTexutre[int2(id.x, id.y)].rgb);
        float rightBottom = calculateLuminance(_ScreenSpaceTexutre[int2(id.x + 1, id.y)].rgb);
        float leftTop = calculateLuminance(_ScreenSpaceTexutre[int2(id.x, id.y + 1)].rgb);
        float rightTop = calculateLuminance(_ScreenSpaceTexutre[int2(id.x + 1, id.y + 1)].rgb);

        _ResultTexture[id.xy] = float4(leftBottom, rightBottom, leftTop, rightTop);
    }
    else
    {
        _ResultTexture[id.xy] = _ScreenSpaceTexutre[id.xy];
    }
}